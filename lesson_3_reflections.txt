Q: When would you want to use a remote repository rather than keeping all your work local?
A: I'd want to use a remote repository whenever i want to share my code: either publicly with everyone as an open source project, or privately if it's something proprietary i am working on with a group of people.

Q: Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
A: Because if my local repository suffered unwanted changes, i could possibly checkout a head commit from my local repository that wasn't the one expected.

Q: Describe the differences between forks, clones, and branches. When would you use one instead of another?
A: Forks are clone operations done on the GitHub servers. You fork someone's repository, and get your own GitHub repository as a clone of the original.
   Clones are repositories created by the clone operation. Basically a new repository is created with a full copy of the original repository.
   A branch is a singly-linked list of commits. From its head you can reach every commit on the same branch.

Q: What is the benefit of having a copy of the last known state of the remote stored locally?
A: I think the main benefit is having a local cache of the remote. This way you dont have to rely on an internet connection all the time. Also, in case of inconsistencies between the remote and the local master, you can get fetch the remote contents into the origin/master and do a merge between origin/master and master.

Q: How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
A: Collaboration would be less granular. Would probably have to be done with a large communication overhead between contributors. Git and GitHub seem to make collaboration easier. 
