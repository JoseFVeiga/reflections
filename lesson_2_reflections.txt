Q: What happens when you initialize a repository? Why do you need to do it?
A: A branch is created. A branch is needed to make commits into it.

Q: How is the staging area different from the working directory and the repository? What value do you think it offers?
A: The staging area flags the files in the working directory for comitting. It allows us to have files in the working directory that are not eligible for commits.

Q: How can you use the staging area to make sure you have one commit per logical change?
A: I dont understand this fully at the moment. The staging area allows to conveniently see the changes between the working directory and the last commit (by comparing the working directory with the staging area) before you actually make the new commit...

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A: Branching helps for working on several versions of the code at the same time. For example one might need to test some experimental features therefore creating an extra branch for it while maintaining the master branch intact.

Q: How do the diagrams help you visualize the branch structure?
A: Since git log can be non-linear, diagrams can help visualize the branch structure much faster. 

Q: What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
A: When two branches are merged together, the code in the latest commits is merged and all the commits from both branches are now linked in the resulting branch. 
